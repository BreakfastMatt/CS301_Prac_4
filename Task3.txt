a)	True, If a grammar has more than one parse tree, I.e. it can parse the same input in two different way then it is not LL(1). 
	The way to prove this is to look at the ‘Firsts’ of each of the productions and if any two of them are not disjoint, 
	the grammar is ambiguous and therefor violates the first rule of LL(1) grammars. (also rule 2)

b)	True, In order for a grammar to not be LL(1) it must have a multiple path parse tree which means it must be ambiguous.

c)	False, an ambiguous language is a language for which no unambiguous grammar exists, therefore since an LL(1) grammar cannot be ambiguous 
	       an ambiguous language cannot be described by an LL(1) grammar.

d)  True, an unambiguous language can only be described by an unambiguous grammar therefore an LL(1) could exist.
